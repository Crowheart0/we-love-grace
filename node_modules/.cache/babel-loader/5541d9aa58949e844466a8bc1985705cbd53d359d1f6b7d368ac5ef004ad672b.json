{"ast":null,"code":"import { computed, ref } from 'vue';\nexport default {\n  name: 'CommentItem',\n  props: {\n    comment: {\n      type: Object,\n      required: true\n    }\n  },\n  setup(props) {\n    const showImageModal = ref(false);\n    const formattedDate = computed(() => {\n      const date = new Date(props.comment.timestamp);\n      return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')} ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`;\n    });\n    const openImageModal = () => {\n      showImageModal.value = true;\n    };\n    const closeImageModal = () => {\n      showImageModal.value = false;\n    };\n    return {\n      formattedDate,\n      showImageModal,\n      openImageModal,\n      closeImageModal\n    };\n  }\n};","map":{"version":3,"names":["computed","ref","name","props","comment","type","Object","required","setup","showImageModal","formattedDate","date","Date","timestamp","getFullYear","getMonth","toString","padStart","getDate","getHours","getMinutes","openImageModal","value","closeImageModal"],"sources":["D:\\vue_project\\we-love-grace\\src\\components\\CommentItem.vue"],"sourcesContent":["<template>\r\n  <div class=\"comment\">\r\n    <div class=\"comment-header\">\r\n      <span class=\"username\">{{ comment.username }}</span>\r\n      <span class=\"timestamp\">{{ formattedDate }}</span>\r\n    </div>\r\n    <div class=\"comment-content\">{{ comment.content }}</div>\r\n    <div v-if=\"comment.mediaUrl\" class=\"comment-media\">\r\n      <img \r\n        v-if=\"comment.mediaType === 'image'\" \r\n        :src=\"comment.mediaUrl\" \r\n        alt=\"用户上传图片\" \r\n        @click=\"openImageModal\"\r\n        class=\"clickable-image\"\r\n      />\r\n      <video v-else-if=\"comment.mediaType === 'video'\" :src=\"comment.mediaUrl\" controls></video>\r\n    </div>\r\n    \r\n    <!-- 图片大图模态框 -->\r\n    <div v-if=\"showImageModal\" class=\"image-modal\" @click=\"closeImageModal\">\r\n      <div class=\"modal-content\" @click.stop>\r\n        <span class=\"close-button\" @click=\"closeImageModal\">&times;</span>\r\n        <img :src=\"comment.mediaUrl\" alt=\"大图预览\" class=\"modal-image\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { computed, ref } from 'vue'\r\n\r\nexport default {\r\n  name: 'CommentItem',\r\n  props: {\r\n    comment: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  setup(props) {\r\n    const showImageModal = ref(false)\r\n    \r\n    const formattedDate = computed(() => {\r\n      const date = new Date(props.comment.timestamp)\r\n      return `${date.getFullYear()}-${(date.getMonth()+1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')} ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`\r\n    })\r\n    \r\n    const openImageModal = () => {\r\n      showImageModal.value = true\r\n    }\r\n    \r\n    const closeImageModal = () => {\r\n      showImageModal.value = false\r\n    }\r\n    \r\n    return {\r\n      formattedDate,\r\n      showImageModal,\r\n      openImageModal,\r\n      closeImageModal\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.comment {\r\n  background-color: rgba(255, 255, 255, 0.8);\r\n  margin: 10px 0;\r\n  padding: 15px;\r\n  border-radius: 5px;\r\n  border-left: 5px solid #b19cd9;\r\n}\r\n\r\n.comment-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 10px;\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\n.username {\r\n  color: #b19cd9;\r\n}\r\n\r\n.timestamp {\r\n  color: #666;\r\n  font-size: 14px;\r\n}\r\n\r\n.comment-content {\r\n  margin-bottom: 10px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.comment-media img,\r\n.comment-media video {\r\n  max-width: 100%;\r\n  max-height: 300px;\r\n  margin-top: 10px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.clickable-image {\r\n  cursor: pointer;\r\n  transition: opacity 0.3s ease;\r\n}\r\n\r\n.clickable-image:hover {\r\n  opacity: 0.8;\r\n}\r\n\r\n/* 模态框样式 */\r\n.image-modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.modal-content {\r\n  position: relative;\r\n  max-width: 90%;\r\n  max-height: 90%;\r\n  background: white;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.close-button {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 15px;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  color: #666;\r\n  cursor: pointer;\r\n  z-index: 1001;\r\n}\r\n\r\n.close-button:hover {\r\n  color: #000;\r\n}\r\n\r\n.modal-image {\r\n  max-width: 100%;\r\n  max-height: 80vh;\r\n  object-fit: contain;\r\n  border-radius: 5px;\r\n}\r\n</style>"],"mappings":"AA6BA,SAASA,QAAQ,EAAEC,GAAE,QAAS,KAAI;AAElC,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE;IACLC,OAAO,EAAE;MACPC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,KAAKA,CAACL,KAAK,EAAE;IACX,MAAMM,cAAa,GAAIR,GAAG,CAAC,KAAK;IAEhC,MAAMS,aAAY,GAAIV,QAAQ,CAAC,MAAM;MACnC,MAAMW,IAAG,GAAI,IAAIC,IAAI,CAACT,KAAK,CAACC,OAAO,CAACS,SAAS;MAC7C,OAAO,GAAGF,IAAI,CAACG,WAAW,CAAC,CAAC,IAAI,CAACH,IAAI,CAACI,QAAQ,CAAC,CAAC,GAAC,CAAC,EAAEC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIN,IAAI,CAACO,OAAO,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIN,IAAI,CAACQ,QAAQ,CAAC,CAAC,CAACH,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIN,IAAI,CAACS,UAAU,CAAC,CAAC,CAACJ,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAC;IAChO,CAAC;IAED,MAAMI,cAAa,GAAIA,CAAA,KAAM;MAC3BZ,cAAc,CAACa,KAAI,GAAI,IAAG;IAC5B;IAEA,MAAMC,eAAc,GAAIA,CAAA,KAAM;MAC5Bd,cAAc,CAACa,KAAI,GAAI,KAAI;IAC7B;IAEA,OAAO;MACLZ,aAAa;MACbD,cAAc;MACdY,cAAc;MACdE;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}