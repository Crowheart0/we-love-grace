{"ast":null,"code":"import { ref, onMounted, computed } from 'vue';\nimport CommentItem from './CommentItem.vue';\nimport EmojiPicker from './EmojiPicker.vue';\nimport { getComments, postComment } from '../services/api.js';\nexport default {\n  name: 'MessageBoard',\n  components: {\n    CommentItem,\n    EmojiPicker\n  },\n  props: {\n    user: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props) {\n    const commentText = ref('');\n    const comments = ref([]);\n    const showEmojiPicker = ref(false);\n    const selectedFile = ref(null);\n    const mediaPreview = ref('');\n    const mediaInput = ref(null);\n    const isImage = computed(() => {\n      return selectedFile.value && selectedFile.value.type.startsWith('image/');\n    });\n    const isVideo = computed(() => {\n      return selectedFile.value && selectedFile.value.type.startsWith('video/');\n    });\n    const loadComments = async () => {\n      try {\n        const data = await getComments();\n        comments.value = data;\n      } catch (error) {\n        console.error('加载留言失败:', error);\n      }\n    };\n    const toggleEmojiPicker = () => {\n      showEmojiPicker.value = !showEmojiPicker.value;\n    };\n    const addEmoji = emoji => {\n      commentText.value += emoji;\n      showEmojiPicker.value = false;\n    };\n    const selectMedia = () => {\n      mediaInput.value.click();\n    };\n    const handleMediaSelect = event => {\n      const file = event.target.files[0];\n      if (!file) return;\n\n      // 文件大小限制\n      if (file.type.startsWith('image/') && file.size > 5 * 1024 * 1024) {\n        alert('图片大小不能超过5MB');\n        return;\n      }\n      if (file.type.startsWith('video/') && file.size > 20 * 1024 * 1024) {\n        alert('视频大小不能超过20MB');\n        return;\n      }\n      selectedFile.value = file;\n\n      // 创建预览\n      const reader = new FileReader();\n      reader.onload = e => {\n        mediaPreview.value = e.target.result;\n      };\n      reader.readAsDataURL(file);\n    };\n    const removeMedia = () => {\n      selectedFile.value = null;\n      mediaPreview.value = '';\n      mediaInput.value.value = '';\n    };\n    const postCommentHandler = async () => {\n      if (!commentText.value.trim() && !selectedFile.value) {\n        alert('请输入留言内容或添加媒体文件');\n        return;\n      }\n      try {\n        await postComment({\n          username: props.user,\n          content: commentText.value.trim(),\n          media: selectedFile.value\n        });\n\n        // 重置表单\n        commentText.value = '';\n        removeMedia();\n\n        // 重新加载留言\n        await loadComments();\n      } catch (error) {\n        console.error('发布留言失败:', error);\n        alert('发布留言失败，请重试');\n      }\n    };\n    onMounted(() => {\n      loadComments();\n    });\n    return {\n      commentText,\n      comments,\n      showEmojiPicker,\n      selectedFile,\n      mediaPreview,\n      mediaInput,\n      isImage,\n      isVideo,\n      toggleEmojiPicker,\n      addEmoji,\n      selectMedia,\n      handleMediaSelect,\n      removeMedia,\n      postComment: postCommentHandler\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","CommentItem","EmojiPicker","getComments","postComment","name","components","props","user","type","String","required","setup","commentText","comments","showEmojiPicker","selectedFile","mediaPreview","mediaInput","isImage","value","startsWith","isVideo","loadComments","data","error","console","toggleEmojiPicker","addEmoji","emoji","selectMedia","click","handleMediaSelect","event","file","target","files","size","alert","reader","FileReader","onload","e","result","readAsDataURL","removeMedia","postCommentHandler","trim","username","content","media"],"sources":["D:\\vue_project\\we-love-grace\\src\\components\\MessageBoard.vue"],"sourcesContent":["<template>\r\n  <div class=\"message-board\">\r\n    <h2>Grace 的留言板</h2>\r\n    <div class=\"comment-form\">\r\n      <textarea \r\n        v-model=\"commentText\" \r\n        placeholder=\"写下你的留言...\"\r\n      ></textarea>\r\n      \r\n      <div class=\"media-buttons\">\r\n        <button @click=\"toggleEmojiPicker\">添加表情</button>\r\n        <input \r\n          ref=\"mediaInput\" \r\n          type=\"file\" \r\n          accept=\"image/*,video/*\" \r\n          @change=\"handleMediaSelect\"\r\n          style=\"display:none\"\r\n        >\r\n        <button @click=\"selectMedia\">添加图片/视频</button>\r\n      </div>\r\n      \r\n      <EmojiPicker \r\n        v-if=\"showEmojiPicker\" \r\n        @emoji-selected=\"addEmoji\"\r\n      />\r\n      \r\n      <div v-if=\"selectedFile\" class=\"media-preview\">\r\n        <img v-if=\"isImage\" :src=\"mediaPreview\" alt=\"预览\" />\r\n        <video v-else-if=\"isVideo\" :src=\"mediaPreview\" controls></video>\r\n        <button @click=\"removeMedia\" class=\"remove-media\">移除</button>\r\n      </div>\r\n      \r\n      <button @click=\"postComment\" class=\"post-button\">发布留言</button>\r\n    </div>\r\n    \r\n    <div class=\"comments-container\">\r\n      <CommentItem \r\n        v-for=\"comment in comments\" \r\n        :key=\"comment._id || comment.timestamp\"\r\n        :comment=\"comment\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, computed } from 'vue'\r\nimport CommentItem from './CommentItem.vue'\r\nimport EmojiPicker from './EmojiPicker.vue'\r\nimport { getComments, postComment } from '../services/api.js'\r\n\r\nexport default {\r\n  name: 'MessageBoard',\r\n  components: {\r\n    CommentItem,\r\n    EmojiPicker\r\n  },\r\n  props: {\r\n    user: {\r\n      type: String,\r\n      required: true\r\n    }\r\n  },\r\n  setup(props) {\r\n    const commentText = ref('')\r\n    const comments = ref([])\r\n    const showEmojiPicker = ref(false)\r\n    const selectedFile = ref(null)\r\n    const mediaPreview = ref('')\r\n    const mediaInput = ref(null)\r\n    \r\n    const isImage = computed(() => {\r\n      return selectedFile.value && selectedFile.value.type.startsWith('image/')\r\n    })\r\n    \r\n    const isVideo = computed(() => {\r\n      return selectedFile.value && selectedFile.value.type.startsWith('video/')\r\n    })\r\n    \r\n    const loadComments = async () => {\r\n      try {\r\n        const data = await getComments()\r\n        comments.value = data\r\n      } catch (error) {\r\n        console.error('加载留言失败:', error)\r\n      }\r\n    }\r\n    \r\n    const toggleEmojiPicker = () => {\r\n      showEmojiPicker.value = !showEmojiPicker.value\r\n    }\r\n    \r\n    const addEmoji = (emoji) => {\r\n      commentText.value += emoji\r\n      showEmojiPicker.value = false\r\n    }\r\n    \r\n    const selectMedia = () => {\r\n      mediaInput.value.click()\r\n    }\r\n    \r\n    const handleMediaSelect = (event) => {\r\n      const file = event.target.files[0]\r\n      if (!file) return\r\n      \r\n      // 文件大小限制\r\n      if (file.type.startsWith('image/') && file.size > 5 * 1024 * 1024) {\r\n        alert('图片大小不能超过5MB')\r\n        return\r\n      }\r\n      \r\n      if (file.type.startsWith('video/') && file.size > 20 * 1024 * 1024) {\r\n        alert('视频大小不能超过20MB')\r\n        return\r\n      }\r\n      \r\n      selectedFile.value = file\r\n      \r\n      // 创建预览\r\n      const reader = new FileReader()\r\n      reader.onload = (e) => {\r\n        mediaPreview.value = e.target.result\r\n      }\r\n      reader.readAsDataURL(file)\r\n    }\r\n    \r\n    const removeMedia = () => {\r\n      selectedFile.value = null\r\n      mediaPreview.value = ''\r\n      mediaInput.value.value = ''\r\n    }\r\n    \r\n    const postCommentHandler = async () => {\r\n      if (!commentText.value.trim() && !selectedFile.value) {\r\n        alert('请输入留言内容或添加媒体文件')\r\n        return\r\n      }\r\n      \r\n      try {\r\n        await postComment({\r\n          username: props.user,\r\n          content: commentText.value.trim(),\r\n          media: selectedFile.value\r\n        })\r\n        \r\n        // 重置表单\r\n        commentText.value = ''\r\n        removeMedia()\r\n        \r\n        // 重新加载留言\r\n        await loadComments()\r\n      } catch (error) {\r\n        console.error('发布留言失败:', error)\r\n        alert('发布留言失败，请重试')\r\n      }\r\n    }\r\n    \r\n    onMounted(() => {\r\n      loadComments()\r\n    })\r\n    \r\n    return {\r\n      commentText,\r\n      comments,\r\n      showEmojiPicker,\r\n      selectedFile,\r\n      mediaPreview,\r\n      mediaInput,\r\n      isImage,\r\n      isVideo,\r\n      toggleEmojiPicker,\r\n      addEmoji,\r\n      selectMedia,\r\n      handleMediaSelect,\r\n      removeMedia,\r\n      postComment: postCommentHandler\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.message-board {\r\n  margin-top: 30px;\r\n  background-color: rgba(255, 255, 255, 0.9);\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  text-align: left;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin: 10px 0;\r\n  border-radius: 5px;\r\n  border: 1px solid #ddd;\r\n  box-sizing: border-box;\r\n  min-height: 100px;\r\n  resize: vertical;\r\n}\r\n\r\n.media-buttons {\r\n  margin: 10px 0;\r\n}\r\n\r\n.media-buttons button {\r\n  margin-right: 10px;\r\n  padding: 8px 16px;\r\n  background-color: #f0f0f0;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.media-preview {\r\n  margin: 10px 0;\r\n  position: relative;\r\n}\r\n\r\n.media-preview img,\r\n.media-preview video {\r\n  max-width: 100%;\r\n  max-height: 200px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.remove-media {\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 5px;\r\n  background-color: rgba(255, 0, 0, 0.7);\r\n  color: white;\r\n  border: none;\r\n  border-radius: 50%;\r\n  width: 25px;\r\n  height: 25px;\r\n  cursor: pointer;\r\n}\r\n\r\n.post-button {\r\n  background-color: #b19cd9;\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n}\r\n\r\n.post-button:hover {\r\n  background-color: #9d7bd8;\r\n}\r\n\r\n.comments-container {\r\n  margin-top: 20px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}