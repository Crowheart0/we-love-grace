{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-cd851aec\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"message-board\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Grace 的留言板\", -1));\nconst _hoisted_3 = {\n  class: \"comment-form\"\n};\nconst _hoisted_4 = {\n  class: \"media-buttons\"\n};\nconst _hoisted_5 = {\n  key: 1,\n  class: \"media-preview\"\n};\nconst _hoisted_6 = [\"src\"];\nconst _hoisted_7 = [\"src\"];\nconst _hoisted_8 = {\n  class: \"comments-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_EmojiPicker = _resolveComponent(\"EmojiPicker\");\n  const _component_CommentItem = _resolveComponent(\"CommentItem\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.commentText = $event),\n    placeholder: \"写下你的留言...\"\n  }, null, 512), [[_vModelText, $setup.commentText]]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.toggleEmojiPicker && $setup.toggleEmojiPicker(...args))\n  }, \"添加表情\"), _createElementVNode(\"input\", {\n    ref: \"mediaInput\",\n    type: \"file\",\n    accept: \"image/*,video/*\",\n    onChange: _cache[2] || (_cache[2] = (...args) => $setup.handleMediaSelect && $setup.handleMediaSelect(...args)),\n    style: {\n      \"display\": \"none\"\n    }\n  }, null, 544), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $setup.selectMedia && $setup.selectMedia(...args))\n  }, \"添加图片/视频\")]), $setup.showEmojiPicker ? (_openBlock(), _createBlock(_component_EmojiPicker, {\n    key: 0,\n    onEmojiSelected: $setup.addEmoji\n  }, null, 8, [\"onEmojiSelected\"])) : _createCommentVNode(\"\", true), $setup.selectedFile ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [$setup.isImage ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 0,\n    src: $setup.mediaPreview,\n    alt: \"预览\"\n  }, null, 8, _hoisted_6)) : $setup.isVideo ? (_openBlock(), _createElementBlock(\"video\", {\n    key: 1,\n    src: $setup.mediaPreview,\n    controls: \"\"\n  }, null, 8, _hoisted_7)) : _createCommentVNode(\"\", true), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $setup.removeMedia && $setup.removeMedia(...args)),\n    class: \"remove-media\"\n  }, \"移除\")])) : _createCommentVNode(\"\", true), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $setup.postComment && $setup.postComment(...args)),\n    class: \"post-button\"\n  }, \"发布留言\")]), _createElementVNode(\"div\", _hoisted_8, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.comments, comment => {\n    return _openBlock(), _createBlock(_component_CommentItem, {\n      key: comment._id || comment.timestamp,\n      comment: comment\n    }, null, 8, [\"comment\"]);\n  }), 128))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","$setup","commentText","$event","placeholder","_hoisted_4","onClick","_cache","args","toggleEmojiPicker","ref","type","accept","onChange","handleMediaSelect","style","selectMedia","showEmojiPicker","_createBlock","_component_EmojiPicker","onEmojiSelected","addEmoji","selectedFile","_hoisted_5","isImage","src","mediaPreview","alt","isVideo","controls","removeMedia","postComment","_hoisted_8","_Fragment","_renderList","comments","comment","_component_CommentItem","key","_id","timestamp"],"sources":["D:\\vue_project\\we-love-grace\\src\\components\\MessageBoard.vue"],"sourcesContent":["<template>\r\n  <div class=\"message-board\">\r\n    <h2>Grace 的留言板</h2>\r\n    <div class=\"comment-form\">\r\n      <textarea \r\n        v-model=\"commentText\" \r\n        placeholder=\"写下你的留言...\"\r\n      ></textarea>\r\n      \r\n      <div class=\"media-buttons\">\r\n        <button @click=\"toggleEmojiPicker\">添加表情</button>\r\n        <input \r\n          ref=\"mediaInput\" \r\n          type=\"file\" \r\n          accept=\"image/*,video/*\" \r\n          @change=\"handleMediaSelect\"\r\n          style=\"display:none\"\r\n        >\r\n        <button @click=\"selectMedia\">添加图片/视频</button>\r\n      </div>\r\n      \r\n      <EmojiPicker \r\n        v-if=\"showEmojiPicker\" \r\n        @emoji-selected=\"addEmoji\"\r\n      />\r\n      \r\n      <div v-if=\"selectedFile\" class=\"media-preview\">\r\n        <img v-if=\"isImage\" :src=\"mediaPreview\" alt=\"预览\" />\r\n        <video v-else-if=\"isVideo\" :src=\"mediaPreview\" controls></video>\r\n        <button @click=\"removeMedia\" class=\"remove-media\">移除</button>\r\n      </div>\r\n      \r\n      <button @click=\"postComment\" class=\"post-button\">发布留言</button>\r\n    </div>\r\n    \r\n    <div class=\"comments-container\">\r\n      <CommentItem \r\n        v-for=\"comment in comments\" \r\n        :key=\"comment._id || comment.timestamp\"\r\n        :comment=\"comment\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, computed } from 'vue'\r\nimport CommentItem from './CommentItem.vue'\r\nimport EmojiPicker from './EmojiPicker.vue'\r\nimport { getComments, postComment } from '../services/api.js'\r\n\r\nexport default {\r\n  name: 'MessageBoard',\r\n  components: {\r\n    CommentItem,\r\n    EmojiPicker\r\n  },\r\n  props: {\r\n    user: {\r\n      type: String,\r\n      required: true\r\n    }\r\n  },\r\n  setup(props) {\r\n    const commentText = ref('')\r\n    const comments = ref([])\r\n    const showEmojiPicker = ref(false)\r\n    const selectedFile = ref(null)\r\n    const mediaPreview = ref('')\r\n    const mediaInput = ref(null)\r\n    \r\n    const isImage = computed(() => {\r\n      return selectedFile.value && selectedFile.value.type.startsWith('image/')\r\n    })\r\n    \r\n    const isVideo = computed(() => {\r\n      return selectedFile.value && selectedFile.value.type.startsWith('video/')\r\n    })\r\n    \r\n    const loadComments = async () => {\r\n      try {\r\n        const data = await getComments()\r\n        comments.value = data\r\n      } catch (error) {\r\n        console.error('加载留言失败:', error)\r\n      }\r\n    }\r\n    \r\n    const toggleEmojiPicker = () => {\r\n      showEmojiPicker.value = !showEmojiPicker.value\r\n    }\r\n    \r\n    const addEmoji = (emoji) => {\r\n      commentText.value += emoji\r\n      showEmojiPicker.value = false\r\n    }\r\n    \r\n    const selectMedia = () => {\r\n      mediaInput.value.click()\r\n    }\r\n    \r\n    const handleMediaSelect = (event) => {\r\n      const file = event.target.files[0]\r\n      if (!file) return\r\n      \r\n      // 文件大小限制\r\n      if (file.type.startsWith('image/') && file.size > 5 * 1024 * 1024) {\r\n        alert('图片大小不能超过5MB')\r\n        return\r\n      }\r\n      \r\n      if (file.type.startsWith('video/') && file.size > 20 * 1024 * 1024) {\r\n        alert('视频大小不能超过20MB')\r\n        return\r\n      }\r\n      \r\n      selectedFile.value = file\r\n      \r\n      // 创建预览\r\n      const reader = new FileReader()\r\n      reader.onload = (e) => {\r\n        mediaPreview.value = e.target.result\r\n      }\r\n      reader.readAsDataURL(file)\r\n    }\r\n    \r\n    const removeMedia = () => {\r\n      selectedFile.value = null\r\n      mediaPreview.value = ''\r\n      mediaInput.value.value = ''\r\n    }\r\n    \r\n    const postCommentHandler = async () => {\r\n      if (!commentText.value.trim() && !selectedFile.value) {\r\n        alert('请输入留言内容或添加媒体文件')\r\n        return\r\n      }\r\n      \r\n      try {\r\n        await postComment({\r\n          username: props.user,\r\n          content: commentText.value.trim(),\r\n          media: selectedFile.value\r\n        })\r\n        \r\n        // 重置表单\r\n        commentText.value = ''\r\n        removeMedia()\r\n        \r\n        // 重新加载留言\r\n        await loadComments()\r\n      } catch (error) {\r\n        console.error('发布留言失败:', error)\r\n        alert('发布留言失败，请重试')\r\n      }\r\n    }\r\n    \r\n    onMounted(() => {\r\n      loadComments()\r\n    })\r\n    \r\n    return {\r\n      commentText,\r\n      comments,\r\n      showEmojiPicker,\r\n      selectedFile,\r\n      mediaPreview,\r\n      mediaInput,\r\n      isImage,\r\n      isVideo,\r\n      toggleEmojiPicker,\r\n      addEmoji,\r\n      selectMedia,\r\n      handleMediaSelect,\r\n      removeMedia,\r\n      postComment: postCommentHandler\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.message-board {\r\n  margin-top: 30px;\r\n  background-color: rgba(255, 255, 255, 0.9);\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  text-align: left;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin: 10px 0;\r\n  border-radius: 5px;\r\n  border: 1px solid #ddd;\r\n  box-sizing: border-box;\r\n  min-height: 100px;\r\n  resize: vertical;\r\n}\r\n\r\n.media-buttons {\r\n  margin: 10px 0;\r\n}\r\n\r\n.media-buttons button {\r\n  margin-right: 10px;\r\n  padding: 8px 16px;\r\n  background-color: #f0f0f0;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.media-preview {\r\n  margin: 10px 0;\r\n  position: relative;\r\n}\r\n\r\n.media-preview img,\r\n.media-preview video {\r\n  max-width: 100%;\r\n  max-height: 200px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.remove-media {\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 5px;\r\n  background-color: rgba(255, 0, 0, 0.7);\r\n  color: white;\r\n  border: none;\r\n  border-radius: 50%;\r\n  width: 25px;\r\n  height: 25px;\r\n  cursor: pointer;\r\n}\r\n\r\n.post-button {\r\n  background-color: #b19cd9;\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n}\r\n\r\n.post-button:hover {\r\n  background-color: #9d7bd8;\r\n}\r\n\r\n.comments-container {\r\n  margin-top: 20px;\r\n}\r\n</style>"],"mappings":";;;EACOA,KAAK,EAAC;AAAe;gEACxBC,mBAAA,CAAmB,YAAf,YAAU;;EACTD,KAAK,EAAC;AAAc;;EAMlBA,KAAK,EAAC;AAAe;;;EAiBDA,KAAK,EAAC;;;;;EAS5BA,KAAK,EAAC;AAAoB;;;;uBAlCjCE,mBAAA,CAyCM,OAzCNC,UAyCM,GAxCJC,UAAmB,EACnBH,mBAAA,CA8BM,OA9BNI,UA8BM,G,gBA7BJJ,mBAAA,CAGY;+DAFDK,MAAA,CAAAC,WAAW,GAAAC,MAAA;IACpBC,WAAW,EAAC;gCADHH,MAAA,CAAAC,WAAW,E,GAItBN,mBAAA,CAUM,OAVNS,UAUM,GATJT,mBAAA,CAAgD;IAAvCU,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEP,MAAA,CAAAQ,iBAAA,IAAAR,MAAA,CAAAQ,iBAAA,IAAAD,IAAA,CAAiB;KAAE,MAAI,GACvCZ,mBAAA,CAMC;IALCc,GAAG,EAAC,YAAY;IAChBC,IAAI,EAAC,MAAM;IACXC,MAAM,EAAC,iBAAiB;IACvBC,QAAM,EAAAN,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEP,MAAA,CAAAa,iBAAA,IAAAb,MAAA,CAAAa,iBAAA,IAAAN,IAAA,CAAiB;IAC1BO,KAAoB,EAApB;MAAA;IAAA;iBAEFnB,mBAAA,CAA6C;IAApCU,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEP,MAAA,CAAAe,WAAA,IAAAf,MAAA,CAAAe,WAAA,IAAAR,IAAA,CAAW;KAAE,SAAO,E,GAI9BP,MAAA,CAAAgB,eAAe,I,cADvBC,YAAA,CAGEC,sBAAA;;IADCC,eAAc,EAAEnB,MAAA,CAAAoB;qEAGRpB,MAAA,CAAAqB,YAAY,I,cAAvBzB,mBAAA,CAIM,OAJN0B,UAIM,GAHOtB,MAAA,CAAAuB,OAAO,I,cAAlB3B,mBAAA,CAAmD;;IAA9B4B,GAAG,EAAExB,MAAA,CAAAyB,YAAY;IAAEC,GAAG,EAAC;6BAC1B1B,MAAA,CAAA2B,OAAO,I,cAAzB/B,mBAAA,CAAgE;;IAApC4B,GAAG,EAAExB,MAAA,CAAAyB,YAAY;IAAEG,QAAQ,EAAR;4DAC/CjC,mBAAA,CAA6D;IAApDU,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEP,MAAA,CAAA6B,WAAA,IAAA7B,MAAA,CAAA6B,WAAA,IAAAtB,IAAA,CAAW;IAAEb,KAAK,EAAC;KAAe,IAAE,E,oCAGtDC,mBAAA,CAA8D;IAArDU,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEP,MAAA,CAAA8B,WAAA,IAAA9B,MAAA,CAAA8B,WAAA,IAAAvB,IAAA,CAAW;IAAEb,KAAK,EAAC;KAAc,MAAI,E,GAGvDC,mBAAA,CAMM,OANNoC,UAMM,I,kBALJnC,mBAAA,CAIEoC,SAAA,QAAAC,WAAA,CAHkBjC,MAAA,CAAAkC,QAAQ,EAAnBC,OAAO;yBADhBlB,YAAA,CAIEmB,sBAAA;MAFCC,GAAG,EAAEF,OAAO,CAACG,GAAG,IAAIH,OAAO,CAACI,SAAS;MACrCJ,OAAO,EAAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}